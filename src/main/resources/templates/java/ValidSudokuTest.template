package {pkg};

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

import com.hightower.dailypractice.core.NotImplementedCondition;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(NotImplementedCondition.class)
public class ValidSudokuTest {

    private ValidSudoku classUnderTest;

    @BeforeEach
    void setUp() {
        this.classUnderTest = new ValidSudoku();
    }

    @Test
    public void testDuplicate() {
        assertTrue(this.classUnderTest.solution(new char[][] {
            {'1','2','.','.','3','.','.','.','.'},
            {'4','.','.','5','.','.','.','.','.'},
            {'.','9','8','.','.','.','.','.','3'},
            {'5','.','.','.','6','.','.','.','4'},
            {'.','.','.','8','.','3','.','.','5'},
            {'7','.','.','.','2','.','.','.','6'},
            {'.','.','.','.','.','.','2','.','.'},
            {'.','.','.','4','1','9','.','.','8'},
            {'.','.','.','.','8','.','.','7','9'}
        }));
    }

    @Test
    public void testCase2() {
        assertFalse(this.classUnderTest.solution(new char[][] {
            {'1','2','.','.','3','.','.','.','.'},
            {'4','.','.','5','.','.','.','.','.'},
            {'.','9','1','.','.','.','.','.','3'},
            {'5','.','.','.','6','.','.','.','4'},
            {'.','.','.','8','.','3','.','.','5'},
            {'7','.','.','.','2','.','.','.','6'},
            {'.','.','.','.','.','.','2','.','.'},
            {'.','.','.','4','1','9','.','.','8'},
            {'.','.','.','.','8','.','.','7','9'}
        }));
    }

}